#!/bin/bash

if [ "${1:0:1}" = "@" ]; then
  profile="$1"
  shift

  case "$profile" in
    @guard)
      mux -b -V "$@" shore -e bundle exec guard
      ;;
    @pry)
      mux -V "$@" shore -e pry
      ;;
    @server)
      if [ -f Gemfile ]; then
        server="rails server"
      elif [ -x node_modules/.bin/sails ]; then
        server="sails lift"
      elif [ -f Gruntfile.js ]; then
        server="grunt serve"
      else
        echo "Can't find server for project."
        exit 1
      fi

      mux -b "$@" shore -e "$server"
      ;;
    @console)
      if [ -f Gemfile ]; then
        console="rails console"
      elif [ -x node_modules/.bin/sails ]; then
        console="sails console"
      elif [ -f Gruntfile.js ]; then
        console="node"
      else
        echo "Can't find console for project."
        exit 1
      fi

      mux -V "$@" shore -e "$console"
      ;;
    @log)
      if [ -f "log/development.log" ]; then
        log="log/development.log"
      else
        echo "Can't find log for project."
        exit 1
      fi

      mux -S "$@" shore -e "tail -n 0 -f $log"
      ;;
    @dev)
      mux @server
      [ -f Guardfile ] && mux @guard
      ;;
    *)
      echo "Unknown profile $profile."
      exit 1
      ;;
  esac

  exit
fi

action='new-window'
unset args background

while [ "${1:0:1}" = "-" ]; do
  case "$1" in
    -S)
      action='split-window'
      args="$args -v -l 20"
      ;;
    -V)
      action='split-window'
      if [ `tput cols` -ge 160 ]; then
        args="$args -h -l 80"
      else
        args="$args -v -l 20"
      fi
      ;;
    -b)
      background=1
      ;;
    -s)
      action='split-window'
      args="$args -v"
      ;;
    -v)
      action='split-window'
      args="$args -h"
      ;;
    -c|-l|-p)
      args="$args $1 $2"
      shift
      ;;
    *)
      echo "Usage: $0 [-b] [-c|-s|-v] [-l size|-p percentage] [COMMAND..]"
      exit 255
      ;;
  esac

  shift
done

if [ $# -eq 0 ]; then
  set --
  set -- bash --login
fi

tmux $action $args -- "tmux setenv TMUXPWD_\$(tmux display -p '#D' | tr -d %) \"$PWD\"; PATH=\"$PATH\" $*"

if [ "$background" ]; then
  if [ "$action" = "new-window" ]; then
    tmux last-window
  else
    tmux last-pane
  fi
fi
