#!/bin/bash

function usage {
  echo "Usage: v.play [--MPV-OPTION[=VALUE]] [-ftnrs] [-newest|-oldest] [-3d[ou]]"
  echo "              [-[i|e] REGEX] [-debug|-output] [-playlist PLAYLIST]"
  echo "              PATH..."
  exit 255
}

[ "$1" ] || usage

function add_path {
  path=$( realpath "$1" 2>/dev/null )
  if [ -d "$path" ]; then
    find -L "$path" -type f \( \
          -iname "*.avi"    -or -iname "*.mp[eg34]" \
      -or -iname "*.w[am]v" -or -iname "*.m[ko4]v" \
      -or -iname "*.og[gm]" -or -iname "*.rm" \
      -or -iname "*.iso"    -or -iname "*.asf" \
      -or -iname "*.bin"    -or -iname "*.vob" \
      -or -iname "*.rmv"    -or -iname "*.rmvb" \
      -or -iname "*.flv"    -or -iname "*.img" \
      -or -iname "*.divx"   -or -iname "*.flac" \
      -or -iname "*.ram"    -or -iname "*.mpeg" \
      -or -iname "*.f4v" \
    \) | sort | egrep -i $exclusive_regex "($inclusive_regex)" >> $playlist
  elif [ -f "$path" ]; then
    realpath -- "$path" >> $playlist
  elif [ "$1" ]; then
    echo "$1" >> $playlist
  fi
}

playlist=$( mktemp /tmp/playlist.XXXXXX )
trap "rm -f $playlist" 0 1 2 3 9 15
rm -f $playlist

player=( mpv --playlist=$playlist )

unset format inclusive_regex exclusive_regex debug
sort="cat"
tail="cat"

while [ $# -gt 0 ]; do
  case "$1" in
    --*)
      player=( "${player[@]}" "$1" )
      shift
      ;;
    -debug )
      player=( echo -- "${player[@]}" )
      debug=1
      trap - 0 1 2 3 9 15; shift
      ;;
    -output) player=( cat "$playlist" ); shift;;
    -playlist ) cat "$2" >> $playlist; shift 2;;
    -f ) player=( "${player[@]}" --fs ); shift;;
    -n ) player=( "${player[@]}" --no-audio ); shift;;
    -r ) player=( "${player[@]}" --loop inf ); shift;;
    -s ) player=( "${player[@]}" --shuffle ); shift;;
    -3d)   player=( "${player[@]}" --vf=stereo3d=sbs2l:irl ); shift;;
    -3dou) player=( "${player[@]}" --vf=stereo3d=ab2l:irl ); shift;;
    -i ) inclusive_regex="$2"; shift 2;;
    -e )
      exclusive_regex='-v'
      if [ -n "$inclusive_regex" ]; then
        inclusive_regex="$inclusive_regex|$2"
      else
        inclusive_regex="$2"
      fi
      shift 2
      ;;
    -newest)
      sort="sort -rn"
      format="%T@ "
      shift
      ;;
    -oldest)
      sort="sort -n"
      format="%T@ "
      shift
      ;;
    * )
      if [ -f "$1" -o -z "$format" ]; then
        add_path "$1"
      else
        while read path; do
          add_path "$path"
        done < <(find "$1" -mindepth 1 -maxdepth 1 -printf "$format%p\n" | $sort | $tail | sed -r 's/^ *[0-9\.]+ //')
      fi
      shift
      ;;
  esac
done

if [ -s $playlist ]; then
  "${player[@]}"
  [ "$debug" ] || rm -f $playlist
else
  echo "Playlist empty."
  usage
fi
