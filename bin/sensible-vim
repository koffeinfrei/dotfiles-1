#!/bin/bash

if [ -n "$CMD" ]; then
  vim="$CMD"
elif [ -n "$TERM" -a "$TERM" != 'dumb' ] || [ -n "$SSH_CONNECTION" ]; then
  vim="vim"
elif which mvim &>/dev/null; then
  vim="mvim"
elif which gvim &>/dev/null; then
  vim="gvim"
else
  vim="vim"
fi

# Strip line numbers from filenames
args=( "$@" )
unset line
for (( i = 0; i < ${#args[@]}; i++ )); do
  if [ "${i:0:1}" != "-" ] && [[ "${args[i]}" =~ :[0-9]+.*$ ]]; then
    line="+`echo "${args[i]}" | cut -d: -f2`"
    args[i]="${args[i]%%:*}"
  fi
done

# Detect binary filetypes
if [ ${#args[@]} -gt 0 ]; then
  for file in "$@"; do
    if [ -f "$file" ]; then
      binary_type=$(
        file -L --brief --mime-type -- "$file" \
          | fgrep -vx 'regular file, no read permission' \
          | fgrep -vx 'application/javascript' \
          | fgrep -vx 'application/octet-stream' \
          | fgrep -vx 'application/pgp-keys' \
          | fgrep -vx 'application/xml' \
          | fgrep -vx 'image/svg+xml' \
          | egrep -vx 'inode/(directory|x-empty)' \
          | grep -P '^((?!text/).+|text/rtf)$'
      )

      if [ -n "$binary_type" ]; then
        echo -ne "Open \e[1;37m$file \e[1;30m[$binary_type]\e[0m as binary? [Y/n] "
        read
        if [ "$REPLY" != "n" ]; then
          for (( i = 0; i < ${#args[@]}; i++ )); do
            exec xdg-open "${args[i]}"
          done

          exit
        fi

        break
      fi
    fi
  done
fi

exec $vim "${args[@]}" $line
