# general settings
set -g default-terminal "screen-256color"
set -g history-limit 10000
set -g escape-time 0
set -g base-index 1
set-window-option -g pane-base-index 1

set -g set-titles on
set -g set-titles-string "#{pane_current_command}: #{pane_title}"
set -g set-clipboard on

set -g mode-mouse on
set -g mouse-select-window on
set -g mouse-select-pane on
set -g mouse-resize-pane on

# disable italics
set -g terminal-overrides '*:sitm@,ritm@'

# keybindings {{{
set -g status-keys vi
set -g mode-keys vi

# use C-` as the prefix key
unbind-key C-b
set -g prefix C-@
bind-key ` send-prefix

# reload the tmux configuration
bind-key R source-file ~/.tmux.conf

# zoom current pane
bind-key + resize-pane -Z

# switch between windows
bind-key Space next-window

# copy the tmux selection to the desktop clipboard
bind-key C-c run 'tmux save-buffer - | xclip -i -selection clipboard'

# scroll with PageUp/Down
bind-key -n S-PPage copy-mode -u
bind-key -t vi-copy S-NPage page-down

# copy mode bindings
bind-key -t vi-copy ] cancel
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe 'xclip -i -selection clipboard'

# start new window in current directory (also requires PROMPT_COMMAND)
bind-key c new-window
bind-key C run-shell 'tmux new-window -c "$(tmux show-environment $(echo "TMUXPWD_#D" | tr -d %) | cut -d= -f2- | grep . || echo "$PWD")"'

bind-key s run-shell 'tmux split-window -v -c "$(tmux show-environment $(echo "TMUXPWD_#D" | tr -d %) | cut -d= -f2- | grep . || echo "$PWD")"'
bind-key v run-shell 'tmux split-window -h -c "$(tmux show-environment $(echo "TMUXPWD_#D" | tr -d %) | cut -d= -f2- | grep . || echo "$PWD")"'

# move existing windows into new pane in current window
bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'
# }}}

# powerline setup {{{
source ~/.tmux/powerline/powerline/bindings/tmux/powerline.conf
source ~/.tmux/powerline-theme/powerline-theme.conf

set-window-option -g status-left ""
set-window-option -g status-right "#[fg=black,bg=colour242] #I:#P/#{window_panes} #[fg=colour252]${TMUX_POWERLINE_SYMBOL_LEFT_FULL}#[fg=black,bg=colour248,bold] %H:%M "
# }}}

# vim-tmux-navigator setup {{{
bind-key    h run "tmux select-pane -L"
bind-key    j run "tmux select-pane -D"
bind-key    k run "tmux select-pane -U"
bind-key    l run "tmux select-pane -R"
bind-key    \ run "tmux select-window -l"
bind-key  C-h run "tmux select-pane -L"
bind-key  C-j run "tmux select-pane -D"
bind-key  C-k run "tmux select-pane -U"
bind-key  C-l run "tmux select-pane -R"
bind-key  C-\ run "tmux select-window -l"

bind-key -n C-h if-shell "tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)(vim(diff)?|sudo)$'" \
  "send-keys C-h" "select-pane -L"

bind-key -n C-j if-shell "tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)(vim(diff)?|sudo)$'" \
  "send-keys C-j" "select-pane -D"

bind-key -n C-k if-shell "tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)(vim(diff)?|sudo)$'" \
  "send-keys C-k" "select-pane -U"

bind-key -n C-l if-shell "tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)(vim(diff)?|sudo)$'" \
  "send-keys C-l" "select-pane -R"

bind-key -n C-\ if-shell "tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)(vim(diff)?|sudo)$'" \
  "send-keys 'C-\\'" "select-window -l"
# }}}
